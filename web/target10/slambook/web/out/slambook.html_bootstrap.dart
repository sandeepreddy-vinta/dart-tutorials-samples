import "dart:isolate" as uD;import "dart:uri" as vD;import "dart:html" as n;import "dart:async" as gB;import "dart:collection" as lB;import "dart:json" as aD;class bD{static const  cD="Chrome";static const  dD="Firefox";static const  eD="Internet Explorer";static const  fD="Safari";final  MD;final  minimumVersion;const bD(this.MD,[this.minimumVersion]);}class gD{final  name;const gD(this.name);} IC(){} JC(){var BE=n.document.body;var CE;var DE=new lC(BE);CE=BE.nodes[3].nodes[1];DE.VB(new hD()..host=CE);DE.fB();DE.insert();}main(){zB=true;IC();JC();}class hD extends DC with t{static final KC=new n.DocumentFragment.html('''
      <div class="entry">
        <label>First name?</label>
        <input type="text">
      </div>
      <div class="entry">
        <label>Favorite quote?</label>
        <textarea></textarea>
      </div> 
      <div class="entry">
        <label>Favorite color?</label>
        <input type="color">
      </div>
      <div class="entry">
        <label>Birthday?</label>
        <input type="date">
      </div>
      <div class="entry">
        <label>Favorite volume?</label>
        <input type="range" min="0" max="11">  
      </div>
      <div class="entry">
        <label>Cat or dog?</label>
        <input name="catOrDog" type="radio" value="cat">Cat
        <input name="catOrDog" type="radio" value="dog">Dog
        <input name="catOrDog" type="radio" value="iguana">Iguana
      </div>
      <div>
        <label>Favorite type of music?</label>
        <select>
          <option>Classical</option>
          <option>Country</option>
          <option>Rock</option>
          <option>Silence</option>
        </select>
      </div>
      <div class="entry">
        <label>Check for zombies. </label>
        <input type="checkbox">
      </div>
      <div class="entry">
        <label>Favorite things?</label>
        <input type="checkbox">Kittens
        <input type="checkbox">Raindrops
        <input type="checkbox">Mittens
        <input type="checkbox">Kettles
      </div>

      <div class="submitarea">
        <input type="submit" value="Submit">
        <input type="reset" value="Clear"> <br>    
        <textarea disabled="" class="responsetext"></textarea>
      </div>
      
      <script type="application/dart" src="xslambookform.dart">
      </script>
    ''');var EE,FE,GE,HE,IE,JE,KE,LE,ME,NE,OE,PE,QE,RE;var SE;var TE;var UE,VE; QD(){var WE=createShadowRoot("x-slambook-form");TE=new lC(WE);WE.nodes.add(KC.clone(true));EE=WE.nodes[1].nodes[3];TE.listen(EE.onInput,(h){l['firstName']=EE.value;});TE.AB(()=>l['firstName'],(g){if(EE.value!=g)EE.value=g;},false,false);VE=WE.nodes[3].nodes[3];TE.listen(VE.onInput,(h){l['favoriteQuote']=VE.value;});TE.AB(()=>l['favoriteQuote'],(g){if(VE.value!=g)VE.value=g;},false,false);ME=WE.nodes[5].nodes[3];TE.listen(ME.onInput,(h){l['favoriteColor']=ME.value;});TE.AB(()=>l['favoriteColor'],(g){if(ME.value!=g)ME.value=g;},false,false);NE=WE.nodes[7].nodes[3];TE.listen(NE.onInput,(h){l['birthday']=NE.value;});TE.AB(()=>l['birthday'],(g){if(NE.value!=g)NE.value=g;},false,false);OE=WE.nodes[9].nodes[3];TE.listen(OE.onInput,(h){l['volume']=OE.value;});TE.AB(()=>l['volume'],(g){if(OE.value!=g)OE.value=g;},false,false);PE=WE.nodes[11].nodes[3];TE.listen(PE.onChange,(h){l['catOrDog']='cat';});TE.AB(()=>l['catOrDog']=='cat',(g){if(PE.checked!=g)PE.checked=g;},false,false);QE=WE.nodes[11].nodes[5];TE.listen(QE.onChange,(h){l['catOrDog']='dog';});TE.AB(()=>l['catOrDog']=='dog',(g){if(QE.checked!=g)QE.checked=g;},false,false);RE=WE.nodes[11].nodes[7];TE.listen(RE.onChange,(h){l['catOrDog']='iguana';});TE.AB(()=>l['catOrDog']=='iguana',(g){if(RE.checked!=g)RE.checked=g;},false,false);SE=WE.nodes[13].nodes[3];TE.listen(SE.onChange,(h){l['music']=SE.selectedIndex;});TE.AB(()=>l['music'],(g){if(SE.selectedIndex!=g)SE.selectedIndex=g;},false,false);FE=WE.nodes[15].nodes[3];TE.listen(FE.onChange,(h){l['zombies']=FE.checked;});TE.AB(()=>l['zombies'],(g){if(FE.checked!=g)FE.checked=g;},false,false);GE=WE.nodes[17].nodes[3];TE.listen(GE.onChange,(h){FB['kittens']=GE.checked;});TE.AB(()=>FB['kittens'],(g){if(GE.checked!=g)GE.checked=g;},false,false);HE=WE.nodes[17].nodes[5];TE.listen(HE.onChange,(h){FB['raindrops']=HE.checked;});TE.AB(()=>FB['raindrops'],(g){if(HE.checked!=g)HE.checked=g;},false,false);IE=WE.nodes[17].nodes[7];TE.listen(IE.onChange,(h){FB['mittens']=IE.checked;});TE.AB(()=>FB['mittens'],(g){if(IE.checked!=g)IE.checked=g;},false,false);JE=WE.nodes[17].nodes[9];TE.listen(JE.onChange,(h){FB['kettles']=JE.checked;});TE.AB(()=>FB['kettles'],(g){if(JE.checked!=g)JE.checked=g;},false,false);KE=WE.nodes[19].nodes[1];TE.listen(KE.onClick,(h){YD(h);});LE=WE.nodes[19].nodes[3];TE.listen(LE.onClick,(h){WD(h);});UE=WE.nodes[19].nodes[7];TE.listen(UE.onInput,(h){WB=UE.value;});TE.AB(()=>WB,(g){if(UE.value!=g)UE.value=g;},false,false);TE.fB();} SD(){TE.insert();} VD(){TE.remove();TE=EE=VE=ME=NE=OE=PE=QE=RE=SE=FE=GE=HE=IE=JE=KE=LE=UE=null;}var XE=vB({'kittens':true,'raindrops':false,'mittens':true,'kettles':false}); get FB{if(q){w(this,k.p,'favoriteThings');}return XE;}var ZE=vB({'firstName':'mem','favoriteQuote':'Enjoy all your meals.','favoriteColor':'#4169E1','birthday':'1963-08-30','volume':'11','catOrDog':'dog','music':2,'zombies':true}); get l{if(q){w(this,k.p,'theData');}return ZE;}var aE=""; get WB{if(q){w(this,k.p,'serverResponse');}return aE;}set WB( g){if(IB(this)){o(this,k.p,'serverResponse',aE,g);}aE=g;} YD( h){h.preventDefault();var g=new n.HttpRequest();g.onReadyStateChange.listen((bE){if(g.readyState==n.HttpRequest.DONE&&g.status==200){WB="Server Sez: "+g.responseText;}else if(g.readyState==n.HttpRequest.DONE&&g.status==0){WB="No server";}});var i="http://127.0.0.1:4040/slambookdata";g.open("POST",i);g.send(XD());} WD( g){g.preventDefault();FB['kittens']=false;FB['raindrops']=false;FB['mittens']=false;FB['kettles']=false;l['firstName']='';l['favoriteQuote']='';l['favoriteColor']='#FFFFFF';l['birthday']='2013-01-01';l['volume']='0';l['catOrDog']='cat';l['music']=0;l['zombies']=false;WB="Data cleared.";} XD(){l['favoriteThings']=FB;return aD.stringify(l);}}class LC<JB> extends hC with t implements List<JB>{final  cE;LC([ length]):cE=length!=null?new List<JB>(length):<JB>[] ;factory LC.wD( g)=>new LC<JB>()..addAll(g); get length{if(q)w(this,k.p,'length');return cE.length;}set length( h){var i=cE.length;if(i==h)return;if(IB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){o(this,k.LB,g,cE[g],null);}o(this,k.p,'length',i,h);}else{o(this,k.p,'length',i,h);for(int g=i;g<h;g++ ){o(this,k.NB,g,null,null);}}}cE.length=h;} operator[]( g){if(q)w(this,k.GB,g);return cE[g];}operator[]=( g, h){var i=cE[g];if(IB(this)){o(this,k.GB,g,i,h);}cE[g]=h;} sublist( g,[ end])=>new LC<JB>.wD(super.sublist(g,end)); add( h){var g=cE.length;if(IB(this)){o(this,k.p,'length',g,g+1);o(this,k.NB,g,null,h);}cE.add(h);} removeRange( h, g){if(g==0)return;yB.fC(this,h,g);if(IB(this)){for(int i=h;i<g;i++ ){o(this,k.LB,i,this[i],null);}}yB.eC(this,h+g,this,h,this.length-g-h);this.length=this.length-g;} toString(){if(q){for(int g=0;g<length;g++ ){w(this,k.GB,g);}}return cE.toString();}}typedef  YB<v,s>();class QB<v,s> extends t implements Map<v,s>{final  dE;var eE;var fE;QB({ createMap}):dE=createMap!=null?createMap():new Map<v,s>(){eE=new MC<v,s>(this);fE=new NC<v,s>(this);}factory QB.xD( i,{ createMap}){var g=new QB<v,s>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>eE; get values=>fE; get length{if(q)w(this,k.p,'length');return dE.length;} get isEmpty=>length==0; gE( g)=>w(this,k.GB,g); hE(){w(this,k.p,'length');dE.keys.forEach(gE);} containsKey( g){if(q)gE(g);return dE.containsKey(g);} operator[]( g){if(q)gE(g);return dE[g];} operator[]=( h, g){var j=dE.length;var i=dE[h];dE[h]=g;if(IB(this)){if(j!=dE.length){o(this,k.p,'length',j,dE.length);o(this,k.NB,h,i,g);}else if(i!=g){o(this,k.GB,h,i,g);}}} putIfAbsent( g, j()){if(q)gE(g);var h=dE.length;var i=dE.putIfAbsent(g,j);if(IB(this)&&h!=dE.length){o(this,k.p,'length',h,dE.length);o(this,k.NB,g,null,i);}return i;} remove( g){if(q)gE(g);var h=dE.length;var i=dE.remove(g);if(IB(this)&&h!=dE.length){o(this,k.LB,g,i,null);o(this,k.p,'length',h,dE.length);}return i;} clear(){var g=dE.length;if(IB(this)&&g>0){dE.forEach((i,h){o(this,k.LB,i,h,null);});o(this,k.p,'length',g,0);}dE.clear();} forEach( g( key, value)){if(q)hE();dE.forEach(g);} toString()=>lB.Maps.mapToString(this);}class MC<v,s> extends lB.IterableBase<v>{final  dE;MC(this.dE); get iterator=>new iD<v,s>(dE);}class iD<v,s> implements Iterator<v>{final  dE;final  eE;var iE=false;iD( g):dE=g,eE=g.dE.keys.iterator; moveNext(){if(q)w(dE,k.p,'length');return iE=eE.moveNext();} get current{var g=eE.current;if(q&&iE)dE.gE(g);return g;}}class NC<v,s> extends lB.IterableBase<s>{final  dE;NC(this.dE); get iterator=>new jD<v,s>(dE);}class jD<v,s> implements Iterator<s>{final  dE;final  eE;final  fE;var iE;jD( g):dE=g,eE=g.dE.keys.iterator,fE=g.dE.values.iterator; moveNext(){if(q)w(dE,k.p,'length');var h=eE.moveNext();var g=fE.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return iE=g;} get current{if(q&&iE)dE.gE(eE.current);return fE.current;}}typedef  KB( e);typedef  OC( changes);typedef  RB();typedef  PC();class hB{final oldValue;final newValue;final  changes;hB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is hB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>bC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const p=1;static const GB=2;static const NB=GB|4;static const LB=GB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>cC(type,key,oldValue,newValue); toString(){var g;switch (type){case p:g='field';break;case GB:g='index';break;case NB:g='insert';break;case LB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} QC(g, i,[ debugName]){if(g is t){var h=g;return mB(h,(m){i(new hB(h,h,m));});}var j=new iB(g,i,debugName);if(!j.jE()){return SC;}return j.kE;} mB( g, i){if(g.UB==null)g.UB=new nB();var h=g.UB.add(i);return h.remove;}vB(g){if(g is Map){var h=null;if(g is lB.SplayTreeMap){h=()=>new lB.SplayTreeMap();}else if(g is lB.LinkedHashMap){h=()=>new lB.LinkedHashMap();}return new QB.xD(g,createMap:h);}if(g is Set)return new xB.yD(g);if(g is Iterable)return new LC.wD(g);return g;}class t{var UB;var TB;final  hashCode= ++t.RC;static var RC=0;} IB( g)=>g.UB!=null&&g.UB.head!=null; get q=>SB!=null; w( g, h,i)=>SB.lE(g,h,i); o( g, j,m, h, i){if((j&(k.NB|k.LB))==0){if(h==i)return;}if(OB==null){OB=[] ;dC(TC);}if(g.TB==null){g.TB=[] ;OB.add(g);}g.TB.add(new k(j,m,h,i));} SC(){}var SB;var wB=100;var OB;var PB; TC(){var u=0;while (OB!=null||PB!=null){var j=OB;OB=null;var i=PB;PB=null;if(u++ ==wB){UC(j,i);return;}if(j!=null){for(var h in j){var MB=h.TB;h.TB=null;for(var g=h.UB.head;g!=null;g=g.next){var m=g.value;try {m(MB);}catch (XB,BB){ZB(XB,BB,m,'from ${h}');}}}}if(i!=null){i.forEach((tD,ZD){ZD.mE();});}}} UC( m, j){var g=[] ;if(m!=null){for(var i in m){var MB=i.TB;g.add('${i} ${MB}');}}if(j!=null){for(var u in j.values){var h=u.mE();if(h!=null)g.add('${u} ${h}');}}OB=null;PB=null;var BB='exceeded notifiction limit of ${wB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';XC(BB);}class iB{static var VC=0;final  nE= ++iB.VC;final  oE;final  pE;final  qE;final  rE=new Map();final  sE=[] ;var tE=false;var uE;iB(this.oE,this.pE,this.qE); toString()=>qE!=null?'<observer ${nE}: ${qE}>':'<observer ${nE}>'; jE(){var h=SB;SB=this;try {uE=oE();if(uE is Iterable&&uE is !List&&uE is !t){uE=(uE as Iterable).toList();}}catch (g,i){ZB(g,i,oE,'from ${this}');uE=null;}rE.forEach(vE);rE.clear();assert(SB==this);SB=h;wE();return sE.length>0;} xE( i){try {pE(i);}catch (g,h){ZB(g,h,pE,'from ${this}');}} wE(){var g=uE;if(g is !t)return;sE.add(mB(g,(h){xE(new hB(g,g,h));}));} lE( u, BB,g){var i=rE.putIfAbsent(u,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|BB;}catch (j,m){ZB(j,m,g,'hashCode or operator == from ${this}');}} vE( i, j){sE.add(mB(i,(m){if(tE)return;for(var g in m){var h=j[g.key];if(h!=null&&(h&g.type)!=0){tE=true;if(PB==null){PB=new lB.SplayTreeMap();}PB[nE]=this;return;}}}));} kE(){for(var g in sE){g();}tE=false;} mE(){if(!tE)return null;var g=uE;kE();jE();try {if(g==uE)return null;}catch (i,j){ZB(i,j,g,'operator == from ${this}');return null;}var h=new hB(g,uE);xE(h);return h;}}typedef  WC( message);var XC=(g)=>print(g);typedef  YC(error,stackTrace,obj, message);var ZB=ZC; ZC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class xB<HB> extends gC with t implements Set<HB>{final  yE;final  zE;xB({ createMap}):yE=createMap!=null?createMap():new Map<HB,Object>(),zE=createMap;factory xB.yD( g,{ createMap}){return new xB<HB>(createMap:createMap)..addAll(g);} contains( g){if(q)w(this,k.GB,g);return yE.containsKey(g);} add( g){var h=yE.length;yE[g]=const Object();if(h!=yE.length){o(this,k.p,'length',h,yE.length);o(this,k.NB,g,null,g);}} remove( g){if(q)w(this,k.GB,g);var h=yE.length;yE.remove(g);if(h!=yE.length){if(IB(this)){o(this,k.LB,g,g,null);o(this,k.p,'length',h,yE.length);}return true;}return false;} clear(){if(IB(this)){for(var g in yE.keys){o(this,k.LB,g,g,null);}o(this,k.p,'length',yE.length,0);}yE.clear();} get length{if(q)w(this,k.p,'length');return yE.length;} get isEmpty=>length==0; get iterator=>new kD<HB>(this); addAll( g)=>g.forEach(add); toString(){if(q){for(HB g in yE.keys){w(this,k.GB,g);}}return yE.keys.toSet().toString();}}class kD<HB> implements Iterator<HB>{final  AF;final  BF;var CF=false;kD( g):AF=g,BF=g.yE.keys.iterator; moveNext(){AF.length;return CF=BF.moveNext();} get current{var g=BF.current;if(q&&CF)w(AF,k.GB,g);return g;}}class aC{aC();}class DB<EB>{var DF;var EF;var FF;var GF;DB.zD( g,this.FF):GF=g{if(FF!=null)FF.HF++ ;} get next=>EF; get value=>GF;set value( g)=>GF=g; IF( g, h){EF=h;DF=g;if(g!=null)g.EF=this;if(h!=null)h.DF=this;return this;} append( g)=>new DB<EB>.zD(g,FF).IF(this,EF); remove(){if(FF==null)return;FF.HF-- ;if(DF!=null){DF.EF=EF;}else{FF.JF=EF;}if(EF!=null){EF.DF=DF;}else{FF.KF=DF;}EF=null;DF=null;FF=null;}}class nB<EB> extends lB.IterableBase<EB>{var JF;var KF; get length=>HF;var HF=0;nB(){} get head=>JF; add( h){var g=new DB<EB>.zD(h,this);if(KF==null)return JF=KF=g;return KF=g.IF(KF,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new lD<EB>(this);}class lD<EB> implements Iterator<EB>{var LF;var FF;var MF;var NF=-1;lD(this.FF){LF=new List<DB>(FF.length);var h=0;var g=FF.head;while (g!=null){LF[h++ ]=g;g=g.next;}} get current=>MF; moveNext(){do{NF++ ;}while(NF<LF.length&&LF[NF].FF!=FF);if(NF<LF.length){MF=LF[NF].value;return true;}else{MF=null;return false;}}}aB(h,g)=>h.hashCode*31+g.hashCode;bC(h,g,i)=>aB(aB(h,g),i);cC(g,i,h,j)=>aB(aB(g,i),aB(h,j)); dC( h()){var g=new uD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}class yB{static  eC( u, g, BB, i, m){if(g==null)g=0;if(i==null)i=0;if(g<i){for(int h=g+m-1,j=i+m-1;h>=g;h-- ,j-- ){BB[j]=u[h];}}else{for(int h=g,j=i;h<g+m;h++ ,j++ ){BB[j]=u[h];}}}static  fC( j, h, g){if(g<0){throw new ArgumentError("negative length ${g}");}if(h<0){var i="${h} must be greater than or equal to 0";throw new RangeError(i);}if(h+g>j.length){var i="${h} + ${g} must be in the range [0..${j.length})";throw new RangeError(i);}}}abstract class gC extends lB.IterableBase<dynamic>{}abstract class hC extends lB.ListMixin<dynamic>{} iC(g){if(g is aC)return g.toString();g=g.toString();return kC(g)?g:'#';}const jC=const["http","https","ftp","mailto"]; kC( h){var g=new vD.Uri(h).scheme;if(g=='')return true;return jC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class bB{ fB(){} insert(); remove();}class mD extends bB{final  FC;var OF;final  listener;mD(this.FC,this.listener); insert(){OF=FC.listen(listener);} remove(){OF.cancel();OF=null;}}class nD extends bB{final  HC;final  uB;final  GC;final  isFinal;var kB;nD(this.uB,this.HC,this.GC,this.isFinal); PF(g){HC(GC?iC(g):g);} insert(){if(isFinal){PF(uB());}else if(kB!=null){throw new StateError('data binding already attached.');}else{kB=oC(uB,(g)=>PF(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){kB();kB=null;}}}class oD extends bB{final VB;oD(this.VB); fB(){VB..QD()..PD()..OD();} insert(){VB..RD()..SD();} remove(){VB..VD()..UD();}}class lC extends bB{final  TD;final  children=[] ;final  nodes=[] ;lC(this.TD); listen( i, h){children.add(new mD(i,(g){h(g);pC();}));} AB(g,i,h,[isUrl=false]){children.add(new nD(g,i,isUrl,h));} VB( g){children.add(new oD(g));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); fB(){for(var g=0,h=children.length;g<h;g++ ){children[g].fB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var zB=false; mC(g, m,[ debugName]){if(zB)return QC(g,m);if(m==null)return (){};if(cB==null)cB=new nB<dB>();var i;var h=CB.tC;if(g is CC){i=(g as CC).QF;}else if(g is Function){i=g;try {var j=g();if(j is List){h=CB.eB;}else if(j is Iterable){h=CB.eB;i=()=>g().toList();}else if((j is lB.LinkedHashMap)||(j is lB.SplayTreeMap)){h=CB.qB;}else if(j is Map){h=CB.pB;}}catch (u,XB){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${u}, ${XB})');}}else if(g is List){i=()=>g;h=CB.eB;}else if(g is Iterable){i=()=>g.toList();h=CB.eB;}else if((g is lB.LinkedHashMap)||(g is lB.SplayTreeMap)){i=()=>g;h=CB.qB;}else if(g is Map){i=()=>g;h=CB.pB;}var BB=nC(h,i,m,debugName);var MB=cB.add(BB);return MB.remove;} nC( j, g, i, h){switch (j){case CB.eB:return new pD(g,i,h);case CB.qB:return new rD(g,i,h);case CB.pB:return new qD(g,i,h);default:return new dB(g,i,h);}} oC(h,i,[debugName]){var j=mC(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new hB(null,g));return j;}var cB;class dB{final  tB;final  QF;final  RF;var SF;dB(this.QF,this.RF,this.tB){SF=QF();} toString()=>tB==null?'<unnamed>':tB; ND(){var g=TF();if(UF(g)){var h=SF;VF(g);RF(new hB(h,g));return true;}return false;} UF(g)=>SF!=g; VF(g){SF=g;}TF(){try {return QF();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return SF;}}final  AC=10; pC(){if(cB==null)return;var g;var h=0;do{g=false;for(var i in cB){if(i.ND()){g=true;}}}while(g&& ++h<AC);if(h==AC){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  BC<qC>();typedef  rC<qC>( value);class CC<qC>{CC();}class pD<qC> extends dB{pD(g, i, h):super(g,i,h){VF(TF());} UF( g){return oB(SF,g);} VF(g){SF=new List<qC>.from(g);}}class qD<jB,sC> extends dB{qD(g, i, h):super(g,i,h){VF(TF());} UF( g){var i=SF.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(SF[h]!=g[h])return true;}return false;} VF(g){SF=new Map<jB,sC>.from(g);}}class rD<jB,sC> extends dB{rD(g, i, h):super(g,i,h){VF(TF());} UF( g){return oB(g.keys,SF.keys)||oB(g.values,SF.values);} VF(g){SF=new lB.LinkedHashMap.from(g);}} oB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class CB{final WF;const CB.AE(this.WF);toString()=>'Enum.${WF}';static const eB=const CB.AE('LIST');static const pB=const CB.AE('HASH_MAP');static const qB=const CB.AE('ORDERED_MAP');static const tC=const CB.AE('OTHER');}abstract class DC implements n.Element{var XF;var YF;var ZF={}; get host{if(XF==null)throw new StateError('host element has not been set.');return XF;}set host( g){if(g==null){throw new ArgumentError('host must not be null.');}if(g.xtag!=null){throw new ArgumentError('host must not have its xtag property set.');}if(XF!=null){throw new StateError('host can only be set once.');}g.xtag=this;XF=g;}createShadowRoot([ componentName]){var g=aF();if(componentName!=null){ZF[componentName]=g;}return g;}aF(){if(EC){return host.createShadowRoot();}if(YF==null)YF=[] ;YF.add(new n.DivElement());return YF.last;} PD(){} RD(){} UD(){} OD(){if(EC)return;if(YF.length==0){throw new StateError('Distribution algorithm requires at least one shadow' ' root and can only be run once.');}var j=YF;var g=j.removeLast();var BB=g;var u=new List.from(nodes);var m=[] ;var MB=[] ;while (true){u=bF(g,u);var h=g.query('shadow');if(h!=null){if(j.length>0){g=j.removeLast();m.add(h);MB.add(g);}else{sB(h,u);break;}}else{break;}}for(int i=0;i<m.length;i++ ){var h=m[i];var g=MB[i];sB(h,g.nodes);}nodes.clear();nodes.addAll(BB.nodes);for(var XB in ZF.keys){if(ZF[XB]==BB){ZF[XB]=this;break;}}} bF( BB, j){for(var g in BB.queryAll('content')){if(!vC(g))continue;var i=g.attributes['select'];if(i==null||i=='')i='*';var h=[] ;var u=[] ;for(var m in j){(uC(m,i)?h:u).add(m);}if(h.length==0){h=g.nodes;}sB(g,h);j=u;}return j;}static  uC( h, g){if(h is !n.Element)return g=='*';return (h as n.Element).matches(g);}static  rB( g)=>g.tagName=='CONTENT'||g.tagName=='SHADOW';static  vC( g){assert(rB(g));for(g=g.parent;g!=null;g=g.parent){if(rB(g))return false;}return true;}static  sB( g, h){assert(rB(g));g.parent.insertAllBefore(h,g);g.remove();} get nodes=>host.nodes; replaceWith( g){host.replaceWith(g);} remove()=>host.remove();set text( g){host.text=g;} contains( g)=>host.contains(g); insertBefore( g, h)=>host.insertBefore(g,h); insertAllBefore( g, h)=>host.insertAllBefore(g,h); get attributes=>host.attributes; get children=>host.children; clone( g)=>host.clone(g); get parent=>host.parent; get parentNode=>host.parentNode; get nodeValue=>host.nodeValue; get id=>host.id; set innerHtml( g){host.innerHtml=g;} get tagName=>host.tagName; matches( g)=>host.matches(g); query( g)=>host.query(g); queryAll( g)=>host.queryAll(g); get AD=>host.AD; get BD=>host.BD; get ED=>host.ED; CD( g)=>host.CD(g); DD( g)=>host.DD(g); GD( g)=>host.GD(g); HD( g)=>host.HD(g); LD( h, g)=>host.LD(h,g);get yC=>host.yC; get zC=>host.zC; get localName=>host.localName; get FD=>host.FD; xC( h, g,[ useCapture]){host.xC(h,g,useCapture);} ID( g)=>host.ID(g); JD( h, g,[ useCapture]){host.JD(h,g,useCapture);} KD( g, h)=>host.KD(g,h);get xtag=>host.xtag;set xtag(g){host.xtag=g;} append( g)=>host.append(g); get onChange=>host.onChange; get onClick=>host.onClick; get onInput=>host.onInput;}var wC=false; get EC=>wC&&n.ShadowRoot.supported;//@ sourceMappingURL=slambook.html_bootstrap.dart.map
