import "dart:isolate" as qC;import "dart:async" as oB;import "dart:collection" as fB;import "dart:html" as w;class dC{static const  eC="Chrome";static const  fC="Safari";final  YC;final  minimumVersion;const dC(this.YC,[this.minimumVersion]);}class gC{final  name;const gC(this.name);}final SB=new l();var TB='00:00'; get gB{if(AC){BC(SB,q.VB,'counter');}return TB;}set gB( g){if(zB(SB)){CC(SB,q.VB,'counter',TB,g);}TB=g;}var LB=new Stopwatch();var MB;var UB;var EB; pB(){UB=w.query("#startbutton");MB=w.query("#stopbutton");MB.disabled=true;EB=w.query("#resetbutton");EB.disabled=true;} qB(){LB.start();var g=new Duration(seconds:1);new oB.Timer.periodic(g,tB);UB.disabled=true;MB.disabled=false;EB.disabled=true;} rB(){LB.stop();UB.disabled=false;EB.disabled=false;MB.disabled=true;} sB(){LB.reset();gB='00:00';EB.disabled=true;} tB( uC){var g=LB.elapsedMilliseconds~/1000;var h=0;if(g>=60){h=g~/60;g=g%60;}var i=(h<=9)?'0${h}':'${h}';var j=(g<=9)?'0${g}':'${g}';gB='${i}:${j}';} uB(){var vC=w.document.body;var wC,xC,yC,zC;var AD=new kC(vC);wC=vC.nodes[3].nodes[1];var BD=AD.aC(()=>gB,false);wC.nodes.addAll([new w.Text('\n      '),BD,new w.Text('\n      ')]);xC=vC.nodes[3].nodes[3].nodes[1];AD.listen(xC.onClick,(g){qB();});yC=vC.nodes[3].nodes[3].nodes[3];AD.listen(yC.onClick,(g){rB();});zC=vC.nodes[3].nodes[3].nodes[5];AD.listen(zC.onClick,(g){sB();});AD.cB();AD.insert();}main(){kB=true;pB();uB();}typedef  p( e);typedef  vB( changes);typedef  AB();typedef  wB();class NB{final oldValue;final newValue;final  changes;NB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is NB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>MC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class q{static const VB=1;static const WB=2;static const hB=WB|4;static const iB=WB|8;final  type;final key;final oldValue;final newValue;q(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is q&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>NC(type,key,oldValue,newValue); toString(){var g;switch (type){case VB:g='field';break;case WB:g='index';break;case hB:g='insert';break;case iB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} xB(g, i,[ debugName]){if(g is l){var h=g;return XB(h,(k){i(new NB(h,h,k));});}var j=new OB(g,i,debugName);if(!j.CD()){return DC;}return j.DD;} XB( g, i){if(g.DB==null)g.DB=new YB();var h=g.DB.add(i);return h.remove;}class l{var DB;var CB;final  hashCode= ++l.yB;static var yB=0;} zB( g)=>g.DB!=null&&g.DB.head!=null; get AC=>BB!=null; BC( g, h,i)=>BB.ED(g,h,i); CC( g, j,k, h, i){if((j&(q.hB|q.iB))==0){if(h==i)return;}if(t==null){t=[] ;OC(EC);}if(g.CB==null){g.CB=[] ;t.add(g);}g.CB.add(new q(j,k,h,i));} DC(){}var BB;var jB=100;var t;var u; EC(){var s=0;while (t!=null||u!=null){var j=t;t=null;var i=u;u=null;if(s++ ==jB){FC(j,i);return;}if(j!=null){for(var h in j){var KB=h.CB;h.CB=null;for(var g=h.DB.head;g!=null;g=g.next){var k=g.value;try {k(KB);}catch (eB,v){FB(eB,v,k,'from ${h}');}}}}if(i!=null){i.forEach((pC,cC){cC.FD();});}}} FC( k, j){var g=[] ;if(k!=null){for(var i in k){var KB=i.CB;g.add('${i} ${KB}');}}if(j!=null){for(var s in j.values){var h=s.FD();if(h!=null)g.add('${s} ${h}');}}t=null;u=null;var v='exceeded notifiction limit of ${jB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';IC(v);}class OB{static var GC=0;final  GD= ++OB.GC;final  HD;final  ID;final  JD;final  KD=new Map();final  LD=[] ;var MD=false;var ND;OB(this.HD,this.ID,this.JD); toString()=>JD!=null?'<observer ${GD}: ${JD}>':'<observer ${GD}>'; CD(){var h=BB;BB=this;try {ND=HD();if(ND is Iterable&&ND is !List&&ND is !l){ND=(ND as Iterable).toList();}}catch (g,i){FB(g,i,HD,'from ${this}');ND=null;}KD.forEach(OD);KD.clear();assert(BB==this);BB=h;PD();return LD.length>0;} QD( i){try {ID(i);}catch (g,h){FB(g,h,ID,'from ${this}');}} PD(){var g=ND;if(g is !l)return;LD.add(XB(g,(h){QD(new NB(g,g,h));}));} ED( s, v,g){var i=KD.putIfAbsent(s,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|v;}catch (j,k){FB(j,k,g,'hashCode or operator == from ${this}');}} OD( i, j){LD.add(XB(i,(k){if(MD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){MD=true;if(u==null){u=new fB.SplayTreeMap();}u[GD]=this;return;}}}));} DD(){for(var g in LD){g();}MD=false;} FD(){if(!MD)return null;var g=ND;DD();CD();try {if(g==ND)return null;}catch (i,j){FB(i,j,g,'operator == from ${this}');return null;}var h=new NB(g,ND);QD(h);return h;}}typedef  HC( message);var IC=(g)=>print(g);typedef  JC(error,stackTrace,obj, message);var FB=KC; KC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class LC{LC();}class n<o>{var RD;var SD;var TD;var UD;n.rC( g,this.TD):UD=g{if(TD!=null)TD.VD++ ;} get next=>SD; get value=>UD;set value( g)=>UD=g; WD( g, h){SD=h;RD=g;if(g!=null)g.SD=this;if(h!=null)h.RD=this;return this;} append( g)=>new n<o>.rC(g,TD).WD(this,SD); remove(){if(TD==null)return;TD.VD-- ;if(RD!=null){RD.SD=SD;}else{TD.XD=SD;}if(SD!=null){SD.RD=RD;}else{TD.YD=RD;}SD=null;RD=null;TD=null;}}class YB<o> extends fB.IterableBase<o>{var XD;var YD; get length=>VD;var VD=0;YB(){} get head=>XD; add( h){var g=new n<o>.rC(h,this);if(YD==null)return XD=YD=g;return YD=g.WD(YD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new hC<o>(this);}class hC<o> implements Iterator<o>{var ZD;var TD;var aD;var bD=-1;hC(this.TD){ZD=new List<n>(TD.length);var h=0;var g=TD.head;while (g!=null){ZD[h++ ]=g;g=g.next;}} get current=>aD; moveNext(){do{bD++ ;}while(bD<ZD.length&&ZD[bD].TD!=TD);if(bD<ZD.length){aD=ZD[bD].value;return true;}else{aD=null;return false;}}}GB(h,g)=>h.hashCode*31+g.hashCode;MC(h,g,i)=>GB(GB(h,g),i);NC(g,i,h,j)=>GB(GB(g,i),GB(h,j)); OC( h()){var g=new qC.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);} PC(h, g,[ stringValue]){var i=h is LC;if(stringValue==null){stringValue=h.toString();}if(!i&&g is w.Text){g.text=stringValue;}else{var j=g;g=i?new w.Element.html(stringValue):new w.Text(stringValue);j.replaceWith(g);}return g;}abstract class PB{ cB(){} insert(); remove();}class iC extends PB{final  nB;var cD;final  listener;iC(this.nB,this.listener); insert(){cD=nB.listen(listener);} remove(){cD.cancel();cD=null;}}class jC extends PB{final exp;final  action;final  isFinal;var RB;jC(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new NB(null,exp()));}else if(RB!=null){throw new StateError('binding already attached');}else{RB=SC(exp,action,'generic-binding');}} remove(){if(!isFinal){RB();RB=null;}}}class kC extends PB{final  bC;final  children=[] ;final  nodes=[] ;kC(this.bC); listen( i, h){children.add(new iC(i,(g){h(g);TC();}));} aC( h,i){var g=new w.Text('');children.add(new jC(()=>'${h()}',(j){g=PC(h(),g,j.newValue);},i));return g;} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); cB(){for(var g=0,h=children.length;g<h;g++ ){children[g].cB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var kB=false; QC(g, k,[ debugName]){if(kB)return xB(g,k);if(k==null)return (){};if(HB==null)HB=new YB<IB>();var i;var h=m.XC;if(g is mB){i=(g as mB).dD;}else if(g is Function){i=g;try {var j=g();if(j is List){h=m.JB;}else if(j is Iterable){h=m.JB;i=()=>g().toList();}else if((j is fB.LinkedHashMap)||(j is fB.SplayTreeMap)){h=m.bB;}else if(j is Map){h=m.aB;}}catch (s,eB){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${s}, ${eB})');}}else if(g is List){i=()=>g;h=m.JB;}else if(g is Iterable){i=()=>g.toList();h=m.JB;}else if((g is fB.LinkedHashMap)||(g is fB.SplayTreeMap)){i=()=>g;h=m.bB;}else if(g is Map){i=()=>g;h=m.aB;}var v=RC(h,i,k,debugName);var KB=HB.add(v);return KB.remove;} RC( j, g, i, h){switch (j){case m.JB:return new lC(g,i,h);case m.bB:return new nC(g,i,h);case m.aB:return new mC(g,i,h);default:return new IB(g,i,h);}} SC(h,i,[debugName]){var j=QC(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new NB(null,g));return j;}var HB;class IB{final  dB;final  dD;final  eD;var fD;IB(this.dD,this.eD,this.dB){fD=dD();} toString()=>dB==null?'<unnamed>':dB; ZC(){var g=gD();if(hD(g)){var h=fD;iD(g);eD(new NB(h,g));return true;}return false;} hD(g)=>fD!=g; iD(g){fD=g;}gD(){try {return dD();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return fD;}}final  lB=10; TC(){if(HB==null)return;var g;var h=0;do{g=false;for(var i in HB){if(i.ZC()){g=true;}}}while(g&& ++h<lB);if(h==lB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  UC<VC>();class mB<VC>{mB();}class lC<VC> extends IB{lC(g, i, h):super(g,i,h){iD(gD());} hD( g){return ZB(fD,g);} iD(g){fD=new List<VC>.from(g);}}class mC<QB,WC> extends IB{mC(g, i, h):super(g,i,h){iD(gD());} hD( g){var i=fD.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(fD[h]!=g[h])return true;}return false;} iD(g){fD=new Map<QB,WC>.from(g);}}class nC<QB,WC> extends IB{nC(g, i, h):super(g,i,h){iD(gD());} hD( g){return ZB(g.keys,fD.keys)||ZB(g.values,fD.values);} iD(g){fD=new fB.LinkedHashMap.from(g);}} ZB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class m{final jD;const m.sC(this.jD);toString()=>'Enum.${jD}';static const JB=const m.sC('LIST');static const aB=const m.sC('HASH_MAP');static const bB=const m.sC('ORDERED_MAP');static const XC=const m.sC('OTHER');}//@ sourceMappingURL=stopwatch.html_bootstrap.dart.map
