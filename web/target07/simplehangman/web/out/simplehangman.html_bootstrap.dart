import "dart:uri" as pC;import "dart:html" as o;import "dart:async" as rB;import "dart:collection" as ZB;class aC{static const  bC="Chrome";static const  cC="Firefox";static const  dC="Internet Explorer";static const  eC="Safari";final  UC;final  minimumVersion;const aC(this.UC,[this.minimumVersion]);}class fC{final  name;const fC(this.name);}var aB='pumpernickel';var JB=aB.split("");var KB=aB.replaceAll(new RegExp('.'),'-').split("");var DB=new List();var t='';var LB=false;var MB=false; sB(){} tB(){const  g=7;if(JB.contains(t)){uB();if(!KB.contains('-')){MB=true;}}else{DB.add(t);if(DB.length==g){LB=true;}}t='';} uB(){for(int g=0;g<JB.length;g++ ){if(JB[g]==t){KB[g]=t;}}} vB(){var sC=o.document.body;final tC=new o.InputElement(),uC=new o.Element.html('<p>\n              <template></template>\n            </p>'),vC=new o.Element.html('<p id="wrong">\n              <template></template>\n            </p>');var wC,xC,yC,zC;var AD=new eB(sC);wC=sC.nodes[3].nodes[1];AD.loop(wC,()=>KB,(h,g,AD){var q=h[g];var BD=AD.mB(()=>q,false);AD.addAll([new o.Text(' '),BD,new o.Text(' ')]);});yC=sC.nodes[5].nodes[1];AD.HB(yC,()=>!LB&&!MB,(AD){var CD,DD,ED,FD,GD;CD=tC.clone(true);AD.listen(CD.onInput,(i){t=CD.value;});AD.listen(CD.onKeyUp,(i){i=new o.KeyEvent(i);tB();});AD.WC(()=>t,(j){if(CD.value!=j)CD.value=j;},false,false);ED=uC.clone(true);DD=ED.nodes[1];AD.HB(DD,()=>DB.length!=0,(AD){AD.add(new o.Text(' Sorry! The word contains no: '));});GD=vC.clone(true);FD=GD.nodes[1];AD.loop(FD,()=>DB,(h,g,AD){var YB=h[g];var HD=AD.mB(()=>YB,false);AD.addAll([new o.Text(' '),HD,new o.Text(' ')]);});AD.addAll([new o.Text('\n            Guess a letter...\n            '),CD,new o.Text('\n            '),ED,new o.Text('\n            '),GD,new o.Text('\n          ')]);});zC=sC.nodes[5].nodes[3];AD.HB(zC,()=>LB,(AD){AD.add(new o.Text(' You\'re dead! '));});xC=sC.nodes[5].nodes[5];AD.HB(xC,()=>MB,(AD){AD.add(new o.Text(' You Win! '));});AD.CB();AD.insert();}main(){gB=false;sB();vB();}typedef  p( e);typedef  wB( changes);typedef  s();typedef  xB();class NB{final oldValue;final newValue;final  changes;NB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is NB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>FC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class bB{bB();} yB(g, i,[ debugName]){if(g is u){var h=g;return OB(h,(q){i(new NB(h,h,q));});}var j=new QB(g,i,debugName);if(!j.ID()){return zB;}return j.JD;} OB( g, i){if(g.kB==null)g.kB=new RB();var h=g.kB.add(i);return h.remove;}class u{} zB(){}var EB;var PB;class QB{static var AC=0;final  KD= ++QB.AC;final  LD;final  MD;final  ND;final  OD=new Map();final  PD=[] ;var QD=false;var RD;QB(this.LD,this.MD,this.ND); toString()=>ND!=null?'<observer ${KD}: ${ND}>':'<observer ${KD}>'; ID(){var h=EB;EB=this;try {RD=LD();if(RD is Iterable&&RD is !List&&RD is !u){RD=(RD as Iterable).toList();}}catch (g,i){cB(g,i,LD,'from ${this}');RD=null;}OD.forEach(SD);OD.clear();assert(EB==this);EB=h;TD();return PD.length>0;} UD( i){try {MD(i);}catch (g,h){cB(g,h,MD,'from ${this}');}} TD(){var g=RD;if(g is !u)return;PD.add(OB(g,(h){UD(new NB(g,g,h));}));} SD( i, j){PD.add(OB(i,(q){if(QD)return;for(var g in q){var h=j[g.key];if(h!=null&&(h&g.type)!=0){QD=true;if(PB==null){PB=new ZB.SplayTreeMap();}PB[KD]=this;return;}}}));} JD(){for(var g in PD){g();}QD=false;}}typedef  BC(error,stackTrace,obj, message);var cB=CC; CC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class DC{DC();}class EC{EC();}class m<n>{var VD;var WD;var XD;var YD;m.qC( g,this.XD):YD=g{if(XD!=null)XD.ZD++ ;} get next=>WD; get value=>YD;set value( g)=>YD=g; aD( g, h){WD=h;VD=g;if(g!=null)g.WD=this;if(h!=null)h.VD=this;return this;} append( g)=>new m<n>.qC(g,XD).aD(this,WD); remove(){if(XD==null)return;XD.ZD-- ;if(VD!=null){VD.WD=WD;}else{XD.bD=WD;}if(WD!=null){WD.VD=VD;}else{XD.cD=VD;}WD=null;VD=null;XD=null;}}class RB<n> extends ZB.IterableBase<n>{var bD;var cD; get length=>ZD;var ZD=0;RB(){} get head=>bD; add( h){var g=new m<n>.qC(h,this);if(cD==null)return bD=cD=g;return cD=g.aD(cD,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new gC<n>(this);}class gC<n> implements Iterator<n>{var dD;var XD;var eD;var fD=-1;gC(this.XD){dD=new List<m>(XD.length);var h=0;var g=XD.head;while (g!=null){dD[h++ ]=g;g=g.next;}} get current=>eD; moveNext(){do{fD++ ;}while(fD<dD.length&&dD[fD].XD!=XD);if(fD<dD.length){eD=dD[fD].value;return true;}else{eD=null;return false;}}}dB(h,g)=>h.hashCode*31+g.hashCode;FC(h,g,i)=>dB(dB(h,g),i); GC(h, g,[ stringValue]){var i=h is DC;if(stringValue==null){stringValue=h.toString();}if(!i&&g is o.Text){g.text=stringValue;}else{var j=g;g=i?new o.Element.html(stringValue):new o.Text(stringValue);j.replaceWith(g);}return g;} HC(g){if(g is EC)return g.toString();g=g.toString();return JC(g)?g:'#';}const IC=const["http","https","ftp","mailto"]; JC( h){var g=new pC.Uri(h).scheme;if(g=='')return true;return IC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class v{ CB(){} insert(); remove();}class hC extends v{final  nB;var gD;final  listener;hC(this.nB,this.listener); insert(){gD=nB.listen(listener);} remove(){gD.cancel();gD=null;}}class iC extends v{final exp;final  action;final  isFinal;var k;iC(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new NB(null,exp()));}else if(k!=null){throw new StateError('binding already attached');}else{k=FB(exp,action,'generic-binding');}} remove(){if(!isFinal){k();k=null;}}}class jC extends v{final  qB;final  WB;final  oB;final  isFinal;var k;jC(this.WB,this.qB,this.oB,this.isFinal); hD(g){qB(oB?HC(g):g);} insert(){if(isFinal){hD(WB());}else if(k!=null){throw new StateError('data binding already attached.');}else{k=FB(WB,(g)=>hD(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){k();k=null;}}}class eB extends v{final  XB;final  children=[] ;final  nodes=[] ;eB(this.XB); listen( i, h){children.add(new hC(i,(g){h(g);PC();}));} mB( h,i){var g=new o.Text('');children.add(new iC(()=>'${h()}',(j){g=GC(h(),g,j.newValue);},i));return g;} WC(g,i,h,[isUrl=false]){children.add(new jC(g,i,isUrl,h));} HB( h,g,i){children.add(new LC(h,g,i));} loop( h,g,i){children.add(new kC(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); CB(){for(var g=0,h=children.length;g<h;g++ ){children[g].CB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class fB extends eB{final exp;var k;fB( g,this.exp):super(g); CB(){} insert(){super.CB();if(nodes.length>0){var i=XB.parentNode;var j=XB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  KC( template);class LC extends fB{var IB=false;final  lB;LC( h,g,this.lB):super(h,g); insert(){k=FB(exp,(g){if(!IB&&g.newValue){lB(this);super.insert();IB=true;}else if(IB&&!g.newValue){super.remove();IB=false;}},'conditional-binding');} remove(){super.remove();k();k=null;}}typedef  MC( list, index, template);class kC extends fB{final  pB;kC( h,g,this.pB):super(h,g); insert(){k=FB(exp,(i){super.remove();var h=i.newValue;for(int g=0;g<h.length;g++ ){pB(h,g,this);}super.insert();},'loop-binding');} remove(){super.remove();k();k=null;}}var gB=false; NC(g, q,[ debugName]){if(gB)return yB(g,q);if(q==null)return (){};if(w==null)w=new RB<AB>();var i;var h=l.TC;if(g is jB){i=(g as jB).iD;}else if(g is Function){i=g;try {var j=g();if(j is List){h=l.BB;}else if(j is Iterable){h=l.BB;i=()=>g().toList();}else if((j is ZB.LinkedHashMap)||(j is ZB.SplayTreeMap)){h=l.UB;}else if(j is Map){h=l.TB;}}catch (YB,XC){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${YB}, ${XC})');}}else if(g is List){i=()=>g;h=l.BB;}else if(g is Iterable){i=()=>g.toList();h=l.BB;}else if((g is ZB.LinkedHashMap)||(g is ZB.SplayTreeMap)){i=()=>g;h=l.UB;}else if(g is Map){i=()=>g;h=l.TB;}var YC=OC(h,i,q,debugName);var ZC=w.add(YC);return ZC.remove;} OC( j, g, i, h){switch (j){case l.BB:return new lC(g,i,h);case l.UB:return new nC(g,i,h);case l.TB:return new mC(g,i,h);default:return new AB(g,i,h);}} FB(h,i,[debugName]){var j=NC(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new NB(null,g));return j;}var w;class AB{final  VB;final  iD;final  jD;var kD;AB(this.iD,this.jD,this.VB){kD=iD();} toString()=>VB==null?'<unnamed>':VB; VC(){var g=lD();if(mD(g)){var h=kD;nD(g);jD(new NB(h,g));return true;}return false;} mD(g)=>kD!=g; nD(g){kD=g;}lD(){try {return iD();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return kD;}}final  hB=10; PC(){if(w==null)return;var g;var h=0;do{g=false;for(var i in w){if(i.VC()){g=true;}}}while(g&& ++h<hB);if(h==hB){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  iB<QC>();typedef  RC<QC>( value);class jB<QC>{jB();}class lC<QC> extends AB{lC(g, i, h):super(g,i,h){nD(lD());} mD( g){return SB(kD,g);} nD(g){kD=new List<QC>.from(g);}}class mC<GB,SC> extends AB{mC(g, i, h):super(g,i,h){nD(lD());} mD( g){var i=kD.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(kD[h]!=g[h])return true;}return false;} nD(g){kD=new Map<GB,SC>.from(g);}}class nC<GB,SC> extends AB{nC(g, i, h):super(g,i,h){nD(lD());} mD( g){return SB(g.keys,kD.keys)||SB(g.values,kD.values);} nD(g){kD=new ZB.LinkedHashMap.from(g);}} SB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class l{final oD;const l.rC(this.oD);toString()=>'Enum.${oD}';static const BB=const l.rC('LIST');static const TB=const l.rC('HASH_MAP');static const UB=const l.rC('ORDERED_MAP');static const TC=const l.rC('OTHER');}//@ sourceMappingURL=simplehangman.html_bootstrap.dart.map
